% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pas_filter.R
\name{pas_filter}
\alias{pas_filter}
\title{General purpose filtering for PurpleAir Synoptic objects}
\usage{
pas_filter(pas, ...)
}
\arguments{
\item{pas}{PurpleAir Synoptic \emph{pas} object.}

\item{...}{Logical predicates defined in terms of the variables in the
\code{pas}. Multiple conditions are combined with & or seperated by a comma.
Only rows where the condition evaluates to TRUE are kept.}
}
\value{
A subset of the incoming \emph{pas} object.
}
\description{
A generalized data filter for \emph{pas} objects to
  choose rows/cases where conditions are true. Rows where the condition
  evaluates to NA are dropped.

  This function is essentially \code{dplyr::\link[dplyr:filter]{filter}}
  with an extra check on the validity of the \emph{pas} object.
}
\examples{
library(AirSensor2)

nrow(example_pas)

# Washington
WA_pas <-
  example_pas \%>\%
  pas_filter(stateCode == "WA")

nrow(WA_pas)

# Okanogan and Ferry Counties
Colville_Tribes_pas <-
  example_pas \%>\%
  pas_filter(stateCode == "WA") \%>\%
  pas_filter(countyName \%in\% c("Okanogan", "Ferry"))

nrow(Colville_Tribes_pas)
}
\seealso{
\link{pas_filterArea}

\link{pas_filterNear}

\link{pas_filterNearMonitor}
}
