% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pas_filterNearMonitor.R
\name{pas_filterNearMonitor}
\alias{pas_filterNearMonitor}
\title{Find PurpleAir sensors near a monitor}
\usage{
pas_filterNearMonitor(pas = NULL, monitor = NULL, radius = "1 km")
}
\arguments{
\item{pas}{PurpleAir \emph{pas} object.}

\item{monitor}{\emph{mts_monitor} object from the \pkg{AirMonitor} package.}

\item{radius}{Distance from target with unit (i.e "1000 m").}
}
\value{
A subset of the incoming \emph{pas} object with additional fields.
}
\description{
Filter for PurpleAir sensors within a specified distance from
a monitoring site.
}
\details{
The \code{radius} parameter should be a numeric string with a metric
unit separated by a space, such as \code{"250 m"} or \code{"10 km"}. The
resulting \emph{pas} will be contain only those sensors that are within
`radius` of one of the device-deployments in \code{monitor}.

Three additional columns of metadata will be added to the returned \emph{pas}
object:

\enumerate{
  \item{\code{monitor_DDID} -- nearest monitor deviceDeploymentID}
  \item{\code{monitor_AQSID} -- nearest monitor AQSID (if any)}
  \item{\code{monitor_distance} -- distance in meters to the nearest monitor}
}
}
\examples{
library(AirSensor2)

monitor <-
  AirMonitor::NW_Megafires \%>\%
  AirMonitor::monitor_filter(countyName == "Okanogan")
pas <-
  example_pas_pm25 \%>\%
  pas_filter(countyName == "Okanogan")

# Near Omak, WA
pas_near_monitors <-
  pas \%>\%
  pas_filterNearMonitor(
    monitor,
    radius = "1000 m"
  )

pas_near_monitors \%>\%
  dplyr::select(sensor_index, locationName, monitor_AQSID, monitor_distance)

}
\seealso{
\link{pas_filter}

\link{pas_filterArea}

\link{pas_filterNear}
}
