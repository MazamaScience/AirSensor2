% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Clarity_createOpenSynoptic.R
\name{Clarity_createOpenSynoptic}
\alias{Clarity_createOpenSynoptic}
\title{Create a new Clarity synoptic dataset}
\usage{
Clarity_createOpenSynoptic(
  api_key = NULL,
  format = c("USFS"),
  baseUrl =
    "https://clarity-data-api.clarity.io/v1/open/all-recent-measurement/pm25/hourly"
)
}
\arguments{
\item{api_key}{Clarity API READ Key. If \code{api_key = NULL}, it
will be obtained using \code{getAPIKey("Clarity-read")}.}

\item{format}{Customized output format (currently only "USFS").}

\item{baseUrl}{Base URL for the PurpleAir API.}
}
\value{
A Clarity Synoptic \emph{pas} object.
}
\description{
Download, parse and enhance synoptic data from Clarity and
return the results as a useful tibble with class \code{clarity_synoptic}.

Steps include:

1) Download and parse synoptic data

2) Replace variable names with more consistent, more human readable names.

3) Add spatial metadata for each sensor including:
\itemize{
  \item{timezone -- olson timezone}
  \item{countryCode -- ISO 3166-1 alpha-2}
  \item{stateCode -- ISO 3166-2 alpha-2}
}

4) Convert data types from character to \code{POSIXct} and \code{numeric}.
}
\examples{
\donttest{
# Fail gracefully if any resources are not available
try({

library(AirSensor2)

initializeMazamaSpatialUtils()

syn <-
  Clarity_createOpenSynoptic(
    api_key = Clarity_API_READ_KEY,
    format = "USFS"
  )

pas \%>\% pas_leaflet()

}, silent = FALSE)
}
}
