% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pas_enhanceRawData_2020.R
\name{pas_enhanceRawData_2020}
\alias{pas_enhanceRawData_2020}
\title{Enhance synoptic data from PurpleAir}
\usage{
pas_enhanceRawData_2020(
  pas_raw = NULL,
  countryCodes = NULL,
  stateCodes = NULL,
  spatialDataDir = "~/Data/Spatial"
)
}
\arguments{
\item{pas_raw}{Dataframe returned by \code{pas_downloadParseRawData_2020()}.}

\item{countryCodes}{ISO 3166-1 alpha-2 country codes used to subset the data.}

\item{stateCodes}{ISO-3166-2 alpha-2 state codes used to subset the data.}

\item{spatialDataDir}{Directory containing \pkg{MazamaSpatialUtils} datasets.}
}
\value{
Enhanced Dataframe of synoptic PurpleAir data.
}
\description{
Enhance raw synoptic data from PurpleAir to create an improved
dataframe compatible with the \pkg{MazamaLocationUtils} package.

Steps include:

1) Replace variable with more consistent, human readable names.

2) Add spatial metadata for each sensor including:
\itemize{
  \item{timezone -- Olson timezone}
  \item{countryCode -- ISO 3166-1 alpha-2}
  \item{stateCode -- ISO 3166-2 alpha-2}
}

3) Convert data types from character to \code{POSIXct} and \code{numeric}.

4) Add additional metadata items:
\itemize{
\item{sensorManufacturer = "Purple Air"}
}

Filtering by country can speed up the process of enhancement and may be
performed by providing a vector ISO country codes to the \code{countryCodes}
argument. By default, no subsetting is performed.

Uses may also limit results by specifying \code{stateCodes} when
\code{countryCodes} is limited to a single country.
}
\examples{
\donttest{
# Fail gracefully if any resources are not available
try({

library(AirSensor2)

initializeMazamaSpatialUtils()

pas_raw <- pas_downloadParseRawData_2020()


pas_AU <-
  pas_enhanceRawData_2020(
    pas_raw,
    countryCodes = "AU"
  ) \%>\%
  dplyr::filter(
    DEVICE_LOCATION_TYPE == "outside"
  )

if ( interactive() )
  MazamaLocationUtils::table_leaflet(pas_AU)

pas_WA <-
  pas_enhanceRawData_2020(
    pas_raw,
    countryCodes = "US",
    stateCodes = "WA"
  ) \%>\%
  dplyr::filter(
    DEVICE_LOCATION_TYPE == "outside"
  )

if ( interactive() )
  MazamaLocationUtils::table_leaflet(pas_WA)

}, silent = FALSE)
}
}
\seealso{
\link{pas_downloadParseRawData_2020}
}
