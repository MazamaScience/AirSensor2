% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pas_lifespanPlot.R
\name{pas_lifespanPlot}
\alias{pas_lifespanPlot}
\title{Time range plot showing the lifespan of individual PurpleAir sensors}
\usage{
pas_lifespanPlot(
  pas,
  showSensor = FALSE,
  sensorIdentifier = "sensor_index",
  moreSpace = 0,
  ...
)
}
\arguments{
\item{pas}{PurpleAir Synoptic \emph{pas} object.}

\item{showSensor}{Logical specifying inclusion of \code{pas$sensor_index} in the plot.}

\item{sensorIdentifier}{Name of the column to use when identifying a sensor.}

\item{moreSpace}{Fractional amount which to expand the time axis so as to allow
more room for sensorIdentifiers.}

\item{...}{Additional arguments to be passed to graphics::plot.default().}
}
\value{
No return value. This function is called to create a plot on the
active graphics device.
}
\description{
Plots the lifespan of PurpleAir sensors -- the time range
between \code{pas$date_created} and \code{pas$last_seen}.  You can use
\code{dplyr::filter} and \code{dplyr::arrange()} to pre-process the \code{pas}
dataframe to generate informative results

When \code{showSensor = TRUE}, typical values for \code{sensorIdentifier} would
be either \code{sensorIndex} or \code{locationName}.
}
\examples{
library(AirSensor2)

# Plot all lifespans
example_pas_historical \%>\%
  pas_lifespanPlot()

# Methow Valley Clean Air Ambassador sensors
example_pas_historical \%>\%
  pas_filter(stringr::str_detect(locationName, "Ambassador")) \%>\%
  pas_lifespanPlot(
    showSensor = TRUE,
    sensorIdentifier = "locationName",
    cex = .6,
    lwd = 2,
    moreSpace = .3
  )

# Arrange by lifespan
example_pas_historical \%>\%
  pas_filter(stringr::str_detect(locationName, "Ambassador")) \%>\%
  dplyr::mutate(lifespan = last_seen - date_created) \%>\%
  dplyr::arrange(lifespan) \%>\%
  pas_lifespanPlot(
    showSensor = TRUE,
    sensorIdentifier = "locationName",
    cex = .6,
    lwd = 2,
    moreSpace = .3
  )


}
