% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Clarity_updateAllOpenMonitors.R
\name{Clarity_updateAllOpenMonitors}
\alias{Clarity_updateAllOpenMonitors}
\title{Update a Clarity 'mts_monitor' object}
\usage{
Clarity_updateAllOpenMonitors(
  api_key = NULL,
  monitor = NULL,
  format = c("USFS2", "USFS"),
  parameter = c("pm2.5", "nowcast"),
  applyQC = TRUE,
  countryCodes = c("CA", "US", "MX")
)
}
\arguments{
\item{api_key}{Clarity API READ Key. If \code{api_key = NULL}, it
will be obtained using \code{getAPIKey("Clarity-read")}.}

\item{monitor}{Previously generated \emph{mts_monitor} object.}

\item{format}{Customized output format ("USFS2", "USFS").}

\item{parameter}{Parameter to use for data ("pm2.5" or "nowcast")}

\item{applyQC}{Logical specifying whether to use the Clarity QCFlag to
invalidate data values.}

\item{countryCodes}{Vector of ISO 3166-1 alpha-2 country codes used to filter
available data.}
}
\value{
An AirMonitor package \emph{mts_monitor} object.
}
\description{
Download, parse and enhance the last 3 hours of data from all Clarity
"open" sensors and append new data to the incoming Clarity \emph{mts_monitor} object
package.
}
\note{
Maintenance of unique device-deployments will be preserved. If any
Clarity sensor is reported as having a new location, a new deployment will
be created as a separate time series.
}
