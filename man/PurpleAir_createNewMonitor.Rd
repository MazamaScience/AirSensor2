% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PurpleAir_createNewMonitor.R
\name{PurpleAir_createNewMonitor}
\alias{PurpleAir_createNewMonitor}
\title{Create a new PurpleAir 'mts_monitor' object}
\usage{
PurpleAir_createNewMonitor(
  api_key = NULL,
  pas = NULL,
  sensor_index = NULL,
  startdate = NULL,
  enddate = NULL,
  timezone = "UTC",
  correction_FUN = PurpleAir_correction,
  parallel = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{api_key}{PurpleAir API READ Key. If \code{api_key = NULL}, it
will be obtained using \code{getAPIKey("PurpleAir-read")}.}

\item{pas}{Previously generated \emph{pas} object containing \code{sensor_index}.}

\item{sensor_index}{PurpleAir sensor identifier.}

\item{startdate}{Desired start time (ISO 8601) or \code{POSIXct}.}

\item{enddate}{Desired end time (ISO 8601) or \code{POSIXct}.}

\item{timezone}{Olson timezone used to interpret dates.}

\item{correction_FUN}{Correction function applied to \code{pat} data.}

\item{parallel}{Logical specifying whether to attempt simultaneous downloads
using \code{parallel::\link[parallel:mcparallel]{mcparallel}}. (Not available
on Windows.)}

\item{verbose}{Logical controlling the generation of warning and error messages.}
}
\value{
An AirMonitor package \emph{mts_monitor} object.
}
\description{
Download, parse and enhance hourly timeseries data from PurpleAir
and create an object of class \code{mts_monitor} for use with the \pkg{AirMonitor}
package.
}
\note{
Parallel processing using \code{parallel = TRUE} is not available on
Windows machines.
}
\section{Correction}{


Data from PurpleAir is typically corrected to more closely correlate with
EPA regulatory monitors.

By default, \code{correction_FUN} uses the EPA correction equation described
in (see \link{PurpleAir_correction}). Users may supply their own
correction function as long as it meets the following two criteria:
\enumerate{
\item{It must accept an "hourly pat" object as the first argument.}
\item{It must return an augmented "hourly pat" object with an additional
\code{"pm2.5_corrected"} column in \code{pat$data}.}
}

A trivial example to just use \code{pm2.5_atm} would be:

\preformatted{
my_correction <- function(pat) {
  pat$data$pm2.5_corrected <- pat$data$pm2.5_atm
  return(pat)
}
}
}

\examples{
\donttest{
# Fail gracefully if any resources are not available
try({

# AirSensor2 package
library(AirSensor2)

# Set user's PurpleAir_API_READ_KEY
source('global_vars.R')
setAPIKey("PurpleAir-read", PurpleAir_API_READ_KEY)

# Initialize spatial datasets
initializeMazamaSpatialUtils()

mon <-
  PurpleAir_createNewMonitor(
    pas = example_pas,
    sensor_index = "76545",
    startdate = "2023-01-01",
    enddate = "2023-01-08",
    timezone = "UTC",
    verbose = TRUE
  )

AirMonitor::monitor_timeseriesPlot(mon, shadedNight = TRUE)

# Run data download in parallel (faster)
mon <-
  PurpleAir_createNewMonitor(
    pas = example_pas,
    sensor_index = "76545",
    startdate = "2023-01-01",
    enddate = "2023-01-08",
    timezone = "UTC",
    parallel = TRUE
  )

AirMonitor::monitor_timeseriesPlot(mon, shadedNight = TRUE)

}, silent = FALSE)
}
}
\references{
\href{https://www2.purpleair.com}{PurpleAir}

\href{https://api.purpleair.com}{PurpleAir API}

\href{https://www2.purpleair.com/policies/terms-of-service}{PurpleAir Terms of service}

\href{https://www2.purpleair.com/pages/license}{PurpleAir Data license}

\href{https://www2.purpleair.com/pages/attribution}{PurpleAir Data Attribution}
}
