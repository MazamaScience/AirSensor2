% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pat_createHourly.R
\name{pat_createHourly}
\alias{pat_createHourly}
\title{Create a new PurpleAir hourly timeseries dataset.}
\usage{
pat_createHourly(
  api_key = NULL,
  pas = NULL,
  sensor_index = NULL,
  startdate = NULL,
  enddate = NULL,
  timezone = "UTC",
  fields = PurpleAir_HISTORY_HOURLY_PM25_FIELDS,
  parallel = FALSE,
  baseUrl = "https://api.purpleair.com/v1/sensors",
  verbose = FALSE
)
}
\arguments{
\item{api_key}{PurpleAir API Read Key. If \code{api_key = NULL}, it
will be obtained using \code{getAPIKey("PurpleAir-read")}.
See \code{MazamaCoreUtils::\link[MazamaCoreUtils:setAPIKey]{setAPIKey}}.}

\item{pas}{Previously generated \emph{pas} object containing \code{sensor_index}.}

\item{sensor_index}{PurpleAir sensor unique identifier.}

\item{startdate}{Desired start time (ISO 8601) or \code{POSIXct}.}

\item{enddate}{Desired end time (ISO 8601) or \code{POSIXct}.}

\item{timezone}{Olson timezone used to interpret dates.}

\item{fields}{Character string with PurpleAir field names for the Get Sensor Data API.}

\item{parallel}{Logical specifying whether to attempt simultaneous downloads
using \code{parallel::\link[parallel:mcparallel]{mcparallel}}. (Not available
on Windows.)}

\item{baseUrl}{Base URL for the PurpleAir API.}

\item{verbose}{Logical controlling the generation of warning and error messages.}
}
\value{
A PurpleAir Timeseries \emph{pat} object.
}
\description{
Create a \code{pat} object for a specific \code{sensor_index}.

By default, the only variables included in an "hourly pat" are:
\code{datetime, humidity, temperature, pm2.5_atm, pm2.5_atm_a, pm2.5_atm_b}.
These are sufficient for simple QC using \code{pm2.5_atm_a, pm2.5_atm_b} and
simple correction using linear fit models based on
\code{pm2.5_atm, temperature, humidity}.
}
\note{
Parallel processing using \code{parallel = TRUE} is not available on
Windows machines.
}
\examples{
\donttest{
# Fail gracefully if any resources are not available
try({

# AirSensor2 package
library(AirSensor2)

# Set user's PurpleAir_API_READ_KEY
source('global_vars.R')
setAPIKey("PurpleAir-read", PurpleAir_API_READ_KEY)

# Initialize spatial datasets
initializeMazamaSpatialUtils()

pat <-
  pat_createHourly(
    pas = example_pas,
    sensor_index = "76545",
    startdate = "2023-01-01",
    enddate = "2023-01-08",
    timezone = "UTC",
    verbose = TRUE
  )

View(pat$meta[1:100,])

}, silent = FALSE)
}
}
\references{
\href{https://www2.purpleair.com}{PurpleAir}

\href{https://api.purpleair.com}{PurpleAir API}

\href{https://www2.purpleair.com/policies/terms-of-service}{PurpleAir Terms of service}

\href{https://www2.purpleair.com/pages/license}{PurpleAir Data license}

\href{https://www2.purpleair.com/pages/attribution}{PurpleAir Data Attribution}
}
